{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yathartharora/Decentralised-Drive/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport HeadText from '../Components/Heading';\nimport { Grid, Button, Form, Input, Message, Table } from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs';\nimport RequestRow from '../Components/requestrow';\n\nclass DDrive extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        const key = '0x' + this.state.pass;\n        await drive.methods.registerTodrive(key).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onsubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        load: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        const key = 'https://ipfs.io/ipfs/' + this.state.ipfsHash;\n        await drive.methods.upload(this.state.name, key).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        load: false\n      });\n      this.setState({\n        active: 'False'\n      });\n    });\n\n    _defineProperty(this, \"display\", async event => {\n      event.preventDefault();\n      this.setState({\n        count: 0\n      });\n\n      try {\n        const output = await drive.methods.display(this.state.sender, this.state.passcode).call();\n        console.log(output);\n        const requestCount = output.length;\n        this.setState({\n          count: requestCount\n        });\n      } catch (error) {}\n    });\n\n    this.state = {\n      pass: '',\n      loading: false,\n      name: '',\n      buffer: null,\n      load: false,\n      link: '',\n      ipfsHash: '',\n      active: 'False',\n      sender: '',\n      passcode: '',\n      count: 0\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n    this.generate = this.generate.bind(this);\n    this.onsubmit = this.onsubmit.bind(this);\n    this.display = this.display.bind(this);\n  }\n\n  generate(event) {\n    event.preventDefault();\n    this.setState({\n      active: 'False'\n    });\n    ipfs.files.add(this.state.buffer, (err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      this.setState({\n        ipfsHash: res[0].hash\n      });\n      console.log('ipfsHash: ', this.state.ipfsHash);\n    });\n    this.setState({\n      active: 'True'\n    });\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    console.log('Capture File...');\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer ', this.state.buffer);\n    };\n  }\n\n  row(event) {\n    event.preventDefault();\n\n    for (i = 0; i < this.state.count; i++) {\n      /*#__PURE__*/\n      _jsxDEV(Table.Row, {\n        children: \"drive.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeadText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          floated: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Register To Start Uploading Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Passcode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Should be 8 characters long. Use only hexadecimal characters\",\n                value: this.state.pass,\n                onChange: event => this.setState({\n                  pass: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              loading: this.state.loading,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            size: \"huge\",\n            icon: \"file\",\n            header: \"My Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.display,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.sender,\n                  onChange: event => this.setState({\n                    sender: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Passcode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.passcode,\n                  onChange: event => this.setState({\n                    passcode: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Display\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          widescreen: 6,\n          children: [/*#__PURE__*/_jsxDEV(Message, {\n            header: \"Upload To Drive\",\n            icon: \"inbox\",\n            size: \"huge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            size: \"huge\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onsubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"File Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.name,\n                  onChange: event => this.setState({\n                    name: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Attach File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"file\",\n                  onChange: this.captureFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.generate,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded Hash: \", this.state.ipfsHash]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                secondary: true,\n                loading: this.state.load,\n                children: \"Confirm Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        header: \"Your Files\",\n        size: \"huge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        size: \"huge\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          celled: true,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Name of the File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"File Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DDrive;","map":{"version":3,"sources":["/Users/yathartharora/Decentralised-Drive/pages/index.js"],"names":["React","Component","Layout","HeadText","Grid","Button","Form","Input","Message","Table","drive","web3","ipfs","RequestRow","DDrive","constructor","event","preventDefault","setState","loading","accounts","eth","getAccounts","console","log","key","state","pass","methods","registerTodrive","send","from","gas","error","load","ipfsHash","upload","name","active","count","output","display","sender","passcode","call","requestCount","length","buffer","link","onSubmit","bind","captureFile","generate","onsubmit","files","add","err","res","hash","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","row","i","render","Header","Row","HeaderCell","Body","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../Components/Layout'\nimport HeadText from '../Components/Heading';\nimport {Grid, Button, Form, Input, Message, Table} from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs'\nimport RequestRow from '../Components/requestrow';\n\nclass DDrive extends Component{\n\n    constructor(){\n        super();\n        this.state={\n            pass: '',\n            loading: false,\n            name: '',\n            buffer: null,\n            load: false,\n            link: '',\n            ipfsHash: '',\n            active: 'False',\n            sender: '',\n            passcode: '',\n            count: 0\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.captureFile = this.captureFile.bind(this);\n        this.generate = this.generate.bind(this);\n        this.onsubmit = this.onsubmit.bind(this);\n        this.display = this.display.bind(this);\n    }\n\n    onSubmit = async(event) => {\n        event.preventDefault();\n        this.setState({loading:true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = '0x' + this.state.pass;\n            await drive.methods.registerTodrive(key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({loading: false});\n    }\n\n    onsubmit = async(event) => {\n        event.preventDefault();\n        this.setState({load: true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = 'https://ipfs.io/ipfs/' + this.state.ipfsHash;\n            await drive.methods.upload(this.state.name, key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({load: false});\n        this.setState({active:'False'});\n    }\n    \n\n    generate(event) {\n        event.preventDefault();\n        this.setState({active:'False'});\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: 'True'});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    display = async(event) => {\n        event.preventDefault();\n        this.setState({count: 0})\n        try {\n            const output = await drive.methods.display(this.state.sender,this.state.passcode).call()\n            console.log(output);\n            const requestCount = output.length;\n            this.setState({count: requestCount});\n        } catch (error) {\n            \n        }\n    }\n\n    row(event) {\n        event.preventDefault();\n        for(i=0;i< this.state.count;i++){\n            <Table.Row>drive.</Table.Row>\n        }\n    }\n    render(){\n\n        const {Header, Row, HeaderCell, Body} = Table;\n        return(\n            <Layout>\n                <HeadText />\n                <br></br>\n                <Grid columns={2}>\n                    <Grid.Column width={6} floated=\"left\">\n\n                    <h4>Register To Start Uploading Files</h4>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Field>\n                            <label>Passcode</label>\n                            <Input\n                             placeholder = \"Should be 8 characters long. Use only hexadecimal characters\"\n                             value = {this.state.pass}\n                             onChange = {event => this.setState({pass: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Button primary loading={this.state.loading}>Register</Button>\n                    </Form>\n\n                    <Message \n                         size=\"huge\"\n                         icon=\"file\"\n                         header=\"My Files\"\n                        />\n                        <Message>\n                            <Form onSubmit={this.display}>\n                                <Form.Field>\n                                <label><Message.Header>Address</Message.Header></label>\n                                    <Input \n                                     value = {this.state.sender}\n                                     onChange = {event => this.setState({sender: event.target.value})}\n                                    />\n                                    <label><Message.Header>Passcode</Message.Header></label>\n                                    <Input \n                                     value = {this.state.passcode}\n                                     onChange = {event => this.setState({passcode: event.target.value})}\n                                    />\n                                </Form.Field>\n                                <Button>Display</Button>\n                            </Form>\n                        </Message>\n                    \n                    </Grid.Column>\n\n                    <Grid.Column widescreen={6}>\n                        <Message \n                         header=\"Upload To Drive\" \n                         icon=\"inbox\"\n                         size=\"huge\"\n                        />\n                        <Message size=\"huge\">\n                            <Form onSubmit={this.onsubmit}>\n                                <Form.Field>\n                                    <label><Message.Header>File Name</Message.Header></label>\n                                    <Input\n                                     value = {this.state.name}\n                                     onChange = {event => this.setState({name: event.target.value})}\n                                    />\n\n                                    <label><Message.Header>Attach File</Message.Header></label>\n                                    <Input\n                                     type = 'file'\n                                     onChange = {this.captureFile}\n                                    />\n                                </Form.Field>\n                                <Button onClick={this.generate}>Upload</Button>\n                                <br></br>\n                                 <p>Uploaded Hash: {this.state.ipfsHash}</p>\n                                <br></br>\n                                <Button secondary loading={this.state.load}>Confirm Transaction</Button>\n                            </Form>\n                        </Message>\n\n                    </Grid.Column>\n                </Grid>\n\n                <Message \n                 header = \"Your Files\"\n                 size= \"huge\"\n                />\n                <Message size=\"huge\">\n                    <Table celled>\n                        <Header>\n                            <Row>\n                                <HeaderCell>Name of the File</HeaderCell>\n                                <HeaderCell>File Link</HeaderCell>\n                            </Row>\n                        </Header>\n                        <Body>\n                    \n                        </Body>\n                    </Table>\n                </Message>\n            </Layout>\n        )\n    }\n}\n\nexport default DDrive;"]},"metadata":{},"sourceType":"module"}