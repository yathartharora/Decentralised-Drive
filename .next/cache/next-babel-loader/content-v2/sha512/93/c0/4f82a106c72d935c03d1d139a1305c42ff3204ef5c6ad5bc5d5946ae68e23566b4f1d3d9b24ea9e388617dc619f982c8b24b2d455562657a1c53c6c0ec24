{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yathartharora/Decentralised-Drive/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport HeadText from '../Components/Heading';\nimport { Grid, Button, Form, Input, Message, Table, Icon } from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs';\nimport { Link } from '../routes';\n\nclass DDrive extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        const key = '0x' + this.state.pass;\n        await drive.methods.registerTodrive(key).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onsubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        load: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        const key = 'https://ipfs.io/ipfs/' + this.state.ipfsHash;\n        await drive.methods.upload(this.state.name, key, this.state.currentDateTime, this.state.format).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        load: false\n      });\n      this.setState({\n        active: 'False'\n      });\n    });\n\n    _defineProperty(this, \"display\", async event => {\n      event.preventDefault();\n      this.setState({\n        count: 0\n      });\n\n      try {\n        const output = await drive.methods.display(this.state.sender, '0x' + this.state.passcode).call();\n        console.log(output);\n        this.setState({\n          displayoutput: output\n        });\n        console.log(\"display output\" + this.state.displayoutput);\n        const requestCount = output.length;\n        this.setState({\n          count: requestCount\n        });\n      } catch (error) {}\n    });\n\n    this.state = {\n      displayoutput: [],\n      pass: '',\n      loading: false,\n      name: '',\n      buffer: null,\n      load: false,\n      link: '',\n      ipfsHash: '',\n      active: 'False',\n      sender: '',\n      passcode: '',\n      count: 0,\n      format: '',\n      currentDateTime: Date().toLocaleString()\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n    this.generate = this.generate.bind(this);\n    this.onsubmit = this.onsubmit.bind(this);\n    this.display = this.display.bind(this);\n  }\n\n  generate(event) {\n    event.preventDefault();\n    this.setState({\n      active: 'False'\n    });\n    ipfs.files.add(this.state.buffer, (err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      this.setState({\n        ipfsHash: res[0].hash\n      });\n      console.log('ipfsHash: ', this.state.ipfsHash);\n    });\n    this.setState({\n      active: 'True'\n    });\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    console.log('Capture File...');\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer ', this.state.buffer);\n    };\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body,\n      Cell\n    } = Table;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeadText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 30,\n            fontWeight: 'bolder'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 3,\n        divided: true,\n        padded: true,\n        stretched: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Message, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 30,\n                fontWeight: 'bolder'\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Passcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Should be 8 characters long. Use only hexadecimal characters\",\n                  value: this.state.pass,\n                  onChange: event => this.setState({\n                    pass: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                loading: this.state.loading,\n                secondary: true,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              attached: \"bottom\",\n              warning: true,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"help\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), \"Already registered? Start uploading\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            size: \"huge\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 30,\n                fontWeight: 'bolder'\n              },\n              children: \"My Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.display,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.sender,\n                  onChange: event => this.setState({\n                    sender: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Passcode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.passcode,\n                  onChange: event => this.setState({\n                    passcode: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                secondary: true,\n                children: \"Display\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            size: \"huge\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 30,\n                fontWeight: 'bolder'\n              },\n              children: \"Upload to Drive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onsubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"File Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.name,\n                  onChange: event => this.setState({\n                    name: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                    children: \"Attach File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"file\",\n                  onChange: this.captureFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"File Format\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.format,\n                  onChange: event => this.setState({\n                    format: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.generate,\n                secondary: true,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded Hash: \", this.state.ipfsHash]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                secondary: true,\n                loading: this.state.load,\n                children: \"Confirm Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        size: \"huge\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 30,\n            fontWeight: 'bolder'\n          },\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          celled: true,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Name of the File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Date Modified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"File Format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Body, {\n            children: this.state.displayoutput.map(d => /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Cell, {\n                children: d[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: d[1],\n                  children: \"Click here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: d[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: d[3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DDrive;","map":{"version":3,"sources":["/Users/yathartharora/Decentralised-Drive/pages/index.js"],"names":["React","Component","Layout","HeadText","Grid","Button","Form","Input","Message","Table","Icon","drive","web3","ipfs","Link","DDrive","constructor","event","preventDefault","setState","loading","accounts","eth","getAccounts","console","log","key","state","pass","methods","registerTodrive","send","from","gas","error","load","ipfsHash","upload","name","currentDateTime","format","active","count","output","display","sender","passcode","call","displayoutput","requestCount","length","buffer","link","Date","toLocaleString","onSubmit","bind","captureFile","generate","onsubmit","files","add","err","res","hash","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","render","Header","Row","HeaderCell","Body","Cell","fontSize","fontWeight","value","map","d"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../Components/Layout'\nimport HeadText from '../Components/Heading';\nimport {Grid, Button, Form, Input, Message, Table, Icon} from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs'\nimport {Link} from '../routes';\n\nclass DDrive extends Component{\n\n    constructor(){\n        super();\n        this.state={\n            displayoutput:[],    \n            pass: '',\n            loading: false,\n            name: '',\n            buffer: null,\n            load: false,\n            link: '',\n            ipfsHash: '',\n            active: 'False',\n            sender: '',\n            passcode: '',\n            count: 0,\n            format: '',\n            currentDateTime: Date().toLocaleString()\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.captureFile = this.captureFile.bind(this);\n        this.generate = this.generate.bind(this);\n        this.onsubmit = this.onsubmit.bind(this);\n        this.display = this.display.bind(this);\n    }\n\n    onSubmit = async(event) => {\n        event.preventDefault();\n        this.setState({loading:true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = '0x' + this.state.pass;\n            await drive.methods.registerTodrive(key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({loading: false});\n    }\n\n    onsubmit = async(event) => {\n        event.preventDefault();\n        this.setState({load: true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = 'https://ipfs.io/ipfs/' + this.state.ipfsHash;\n            await drive.methods.upload(this.state.name, key, this.state.currentDateTime,this.state.format).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({load: false});\n        this.setState({active:'False'});\n    }\n    \n\n    generate(event) {\n        event.preventDefault();\n        this.setState({active:'False'});\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: 'True'});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    display = async(event) => {\n\n        event.preventDefault();\n        this.setState({count: 0})\n        try {\n            const output = await drive.methods.display(this.state.sender,'0x'+ this.state.passcode).call()\n            console.log(output);\n            this.setState({displayoutput:output})\n            console.log(\"display output\"+ this.state.displayoutput)\n            \n            const requestCount = output.length;\n            this.setState({count: requestCount});\n        } catch (error) {\n            \n        }\n        \n    }\n\n\n    render(){\n\n        const {Header, Row, HeaderCell, Body, Cell} = Table;\n        return(\n            <Layout>\n                <HeadText />\n                <br></br>\n                <Message>\n                    <div style={{fontSize: 30, fontWeight:'bolder'}}>\n                    \n                    </div>\n                </Message>\n                <Grid columns={3} divided padded stretched>\n                    <Grid.Column>\n                    <Message> \n                    <div style={{fontSize: 30, fontWeight:'bolder'}}>\n                        Register\n                    </div>\n                    <br></br>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Field>\n                            <label>Passcode</label>\n                            <Input\n                             placeholder = \"Should be 8 characters long. Use only hexadecimal characters\"\n                             value = {this.state.pass}\n                             onChange = {event => this.setState({pass: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Button primary loading={this.state.loading} secondary>Register</Button>\n                    </Form>\n                    <br></br>\n                    <Message attached='bottom' warning>\n                    <Icon name='help' />\n                    Already registered? Start uploading\n                    </Message>\n\n                    </Message>\n                        <Message  size=\"huge\">\n                            <div style={{fontSize: 30, fontWeight:'bolder'}}>\n                                My Files\n                            </div>\n                            <br></br>\n                            <Form onSubmit={this.display}>\n                                <Form.Field>\n                                <label><Message.Header>Address</Message.Header></label>\n                                    <Input \n                                     value = {this.state.sender}\n                                     onChange = {event => this.setState({sender: event.target.value})}\n                                    />\n                                    <label><Message.Header>Passcode</Message.Header></label>\n                                    <Input \n                                     value = {this.state.passcode}\n                                     onChange = {event => this.setState({passcode: event.target.value})}\n                                    />\n                                </Form.Field>\n                                <Button secondary>Display</Button>\n                            </Form>\n                        </Message>\n                    \n                    </Grid.Column>\n\n                    <Grid.Column >\n                        <Message size=\"huge\">\n                            <div style={{fontSize: 30, fontWeight:'bolder'}}>\n                                Upload to Drive\n                            </div>\n                            <br></br>\n                            <Form onSubmit={this.onsubmit}>\n                                <Form.Field>\n                                    <label><Message.Header>File Name</Message.Header></label>\n                                    <Input\n                                     value = {this.state.name}\n                                     onChange = {event => this.setState({name: event.target.value})}\n                                    />\n\n                                    <label><Message.Header>Attach File</Message.Header></label>\n                                    <Input\n                                     type = 'file'\n                                     onChange = {this.captureFile}\n                                    />\n\n                                    <label>File Format</label>\n                                    <Input\n                                     value = {this.state.format}\n                                     onChange = {event => this.setState({format: event.target.value})} \n                                    />\n                                </Form.Field>\n                                <Button onClick={this.generate} secondary>Upload</Button>\n                                <br></br>\n                                 <p>Uploaded Hash: {this.state.ipfsHash}</p>\n                                <br></br>\n                                <Button secondary loading={this.state.load}>Confirm Transaction</Button>\n                            </Form>\n                        </Message>\n\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <Message>\n\n                        </Message>\n                    </Grid.Column>\n                </Grid>\n\n                <Message size=\"huge\">\n                    <div style={{fontSize: 30, fontWeight:'bolder'}}>\n                        Files\n                    </div>\n                    <Table celled>\n                        <Header>\n                            <Row>\n                                <HeaderCell>Name of the File</HeaderCell>\n                                <HeaderCell>Link</HeaderCell>\n                                <HeaderCell>Date Modified</HeaderCell>\n                                <HeaderCell>File Format</HeaderCell>\n                            </Row>\n                        </Header>\n                        <Body>\n                        {this.state.displayoutput.map((d) => (\n                            <Row>\n                              <Cell>{d[0]}</Cell>\n                              <Cell><a href={d[1]}>Click here</a></Cell>\n                              <Cell>{d[2]}</Cell>\n                              <Cell>{d[3]}</Cell>\n                            </Row>\n                        ))}\n                        </Body>\n                    </Table>\n                </Message> \n            </Layout>\n        )}\n    }\n\n    export default DDrive;"]},"metadata":{},"sourceType":"module"}