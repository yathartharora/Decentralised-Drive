{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/yathartharora/Decentralised-Drive/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yathartharora/Decentralised-Drive/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport HeadText from '../Components/Heading';\nimport { Grid, Button, Form, Input, Message, Table } from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs';\nimport RequestRow from '../Components/requestrow';\n\nvar DDrive = /*#__PURE__*/function (_Component) {\n  _inherits(DDrive, _Component);\n\n  var _super = _createSuper(DDrive);\n\n  function DDrive() {\n    var _this;\n\n    _classCallCheck(this, DDrive);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts, key;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                console.log(accounts[0]);\n                key = '0x' + _this.state.pass;\n                _context.next = 10;\n                return drive.methods.registerTodrive(key).send({\n                  from: accounts[0],\n                  gas: '1000000'\n                });\n\n              case 10:\n                _context.next = 14;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n\n              case 14:\n                _this.setState({\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onsubmit\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, key;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  load: true\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context2.sent;\n                console.log(accounts[0]);\n                key = 'https://ipfs.io/ipfs/' + _this.state.ipfsHash;\n                _context2.next = 10;\n                return drive.methods.upload(_this.state.name, key).send({\n                  from: accounts[0],\n                  gas: '1000000'\n                });\n\n              case 10:\n                _context2.next = 14;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 14:\n                _this.setState({\n                  load: false\n                });\n\n                _this.setState({\n                  active: 'False'\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 12]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"display\", /*#__PURE__*/function () {\n      var _s = $RefreshSig$();\n\n      var _ref3 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var _useState, _useState2, Sent, setSent, output, requestCount;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _s();\n\n                _useState = useState([]), _useState2 = _slicedToArray(_useState, 2), Sent = _useState2[0], setSent = _useState2[1];\n                event.preventDefault();\n\n                _this.setState({\n                  count: 0\n                });\n\n                _context3.prev = 4;\n                _context3.next = 7;\n                return drive.methods.display(_this.state.sender, _this.state.passcode).call();\n\n              case 7:\n                output = _context3.sent;\n                console.log(output[0].link);\n                requestCount = output.length;\n\n                _this.setState({\n                  count: requestCount\n                });\n\n                setSent(output);\n                _context3.next = 16;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](4);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[4, 14]]);\n      }), \"9fDIcQTjFTOBtU2cpjQq26Sdo6I=\"));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      pass: '',\n      loading: false,\n      name: '',\n      buffer: null,\n      load: false,\n      link: '',\n      ipfsHash: '',\n      active: 'False',\n      sender: '',\n      passcode: '',\n      count: 0\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_this));\n    _this.generate = _this.generate.bind(_assertThisInitialized(_this));\n    _this.onsubmit = _this.onsubmit.bind(_assertThisInitialized(_this));\n    _this.display = _this.display.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DDrive, [{\n    key: \"generate\",\n    value: function generate(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.setState({\n        active: 'False'\n      });\n      ipfs.files.add(this.state.buffer, function (err, res) {\n        if (err) {\n          console.log(err);\n          return;\n        }\n\n        _this2.setState({\n          ipfsHash: res[0].hash\n        });\n\n        console.log('ipfsHash: ', _this2.state.ipfsHash);\n      });\n      this.setState({\n        active: 'True'\n      });\n    }\n  }, {\n    key: \"captureFile\",\n    value: function captureFile(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      console.log('Capture File...');\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this3.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer ', _this3.state.buffer);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(HeadText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 6,\n            floated: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Register To Start Uploading Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Passcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Should be 8 characters long. Use only hexadecimal characters\",\n                  value: this.state.pass,\n                  onChange: function onChange(event) {\n                    return _this4.setState({\n                      pass: event.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                loading: this.state.loading,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              size: \"huge\",\n              icon: \"file\",\n              header: \"My Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.display,\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: this.state.sender,\n                    onChange: function onChange(event) {\n                      return _this4.setState({\n                        sender: event.target.value\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                      children: \"Passcode\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: this.state.passcode,\n                    onChange: function onChange(event) {\n                      return _this4.setState({\n                        passcode: event.target.value\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Display\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            widescreen: 6,\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              header: \"Upload To Drive\",\n              icon: \"inbox\",\n              size: \"huge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              size: \"huge\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.onsubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                      children: \"File Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: this.state.name,\n                    onChange: function onChange(event) {\n                      return _this4.setState({\n                        name: event.target.value\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                      children: \"Attach File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"file\",\n                    onChange: this.captureFile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.generate,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Uploaded Hash: \", this.state.ipfsHash]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  secondary: true,\n                  loading: this.state.load,\n                  children: \"Confirm Transaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return DDrive;\n}(Component);\n\nexport default DDrive;","map":{"version":3,"sources":["/Users/yathartharora/Decentralised-Drive/pages/index.js"],"names":["React","Component","Layout","HeadText","Grid","Button","Form","Input","Message","Table","drive","web3","ipfs","RequestRow","DDrive","event","preventDefault","setState","loading","eth","getAccounts","accounts","console","log","key","state","pass","methods","registerTodrive","send","from","gas","load","ipfsHash","upload","name","active","useState","Sent","setSent","count","display","sender","passcode","call","output","link","requestCount","length","buffer","onSubmit","bind","captureFile","generate","onsubmit","files","add","err","res","hash","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","Header","Row","HeaderCell","Body","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../Components/Layout'\nimport HeadText from '../Components/Heading';\nimport {Grid, Button, Form, Input, Message, Table} from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\nimport ipfs from '../ipfs'\nimport RequestRow from '../Components/requestrow';\n\nclass DDrive extends Component{\n\n    constructor(){\n        super();\n        this.state={\n            pass: '',\n            loading: false,\n            name: '',\n            buffer: null,\n            load: false,\n            link: '',\n            ipfsHash: '',\n            active: 'False',\n            sender: '',\n            passcode: '',\n            count: 0\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.captureFile = this.captureFile.bind(this);\n        this.generate = this.generate.bind(this);\n        this.onsubmit = this.onsubmit.bind(this);\n        this.display = this.display.bind(this);\n    }\n\n    onSubmit = async(event) => {\n        event.preventDefault();\n        this.setState({loading:true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = '0x' + this.state.pass;\n            await drive.methods.registerTodrive(key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({loading: false});\n    }\n\n    onsubmit = async(event) => {\n        event.preventDefault();\n        this.setState({load: true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = 'https://ipfs.io/ipfs/' + this.state.ipfsHash;\n            await drive.methods.upload(this.state.name, key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({load: false});\n        this.setState({active:'False'});\n    }\n    \n\n    generate(event) {\n        event.preventDefault();\n        this.setState({active:'False'});\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: 'True'});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    display = async(event) => {\n        const [Sent,setSent] = useState([]);\n        event.preventDefault();\n        this.setState({count: 0})\n        try {\n            const output = await drive.methods.display(this.state.sender,this.state.passcode).call()\n            console.log(output[0].link);\n            const requestCount = output.length;\n            this.setState({count: requestCount});\n            setSent(output);\n        } catch (error) {\n            \n        }\n        \n    }\n\n    render(){\n\n        const {Header, Row, HeaderCell, Body} = Table;\n        return(\n            <Layout>\n                <HeadText />\n                <br></br>\n                <Grid columns={2}>\n                    <Grid.Column width={6} floated=\"left\">\n\n                    <h4>Register To Start Uploading Files</h4>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Field>\n                            <label>Passcode</label>\n                            <Input\n                             placeholder = \"Should be 8 characters long. Use only hexadecimal characters\"\n                             value = {this.state.pass}\n                             onChange = {event => this.setState({pass: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Button primary loading={this.state.loading}>Register</Button>\n                    </Form>\n\n                    <Message \n                         size=\"huge\"\n                         icon=\"file\"\n                         header=\"My Files\"\n                        />\n                        <Message>\n                            <Form onSubmit={this.display}>\n                                <Form.Field>\n                                <label><Message.Header>Address</Message.Header></label>\n                                    <Input \n                                     value = {this.state.sender}\n                                     onChange = {event => this.setState({sender: event.target.value})}\n                                    />\n                                    <label><Message.Header>Passcode</Message.Header></label>\n                                    <Input \n                                     value = {this.state.passcode}\n                                     onChange = {event => this.setState({passcode: event.target.value})}\n                                    />\n                                </Form.Field>\n                                <Button>Display</Button>\n                            </Form>\n                        </Message>\n                    \n                    </Grid.Column>\n\n                    <Grid.Column widescreen={6}>\n                        <Message \n                         header=\"Upload To Drive\" \n                         icon=\"inbox\"\n                         size=\"huge\"\n                        />\n                        <Message size=\"huge\">\n                            <Form onSubmit={this.onsubmit}>\n                                <Form.Field>\n                                    <label><Message.Header>File Name</Message.Header></label>\n                                    <Input\n                                     value = {this.state.name}\n                                     onChange = {event => this.setState({name: event.target.value})}\n                                    />\n\n                                    <label><Message.Header>Attach File</Message.Header></label>\n                                    <Input\n                                     type = 'file'\n                                     onChange = {this.captureFile}\n                                    />\n                                </Form.Field>\n                                <Button onClick={this.generate}>Upload</Button>\n                                <br></br>\n                                 <p>Uploaded Hash: {this.state.ipfsHash}</p>\n                                <br></br>\n                                <Button secondary loading={this.state.load}>Confirm Transaction</Button>\n                            </Form>\n                        </Message>\n\n                    </Grid.Column>\n                </Grid>\n\n                {/* <Message \n                 header = \"Your Files\"\n                 size= \"huge\"\n                />\n                <Message size=\"huge\">\n                    <Table celled>\n                        <Header>\n                            <Row>\n                                <HeaderCell>Name of the File</HeaderCell>\n                                <HeaderCell>File Link</HeaderCell>\n                            </Row>\n                        </Header>\n                        <Body>\n                        \n                        </Body>\n                    </Table>\n                </Message> */}\n            </Layout>\n        )\n    }\n}\n\nexport default DDrive;"]},"metadata":{},"sourceType":"module"}