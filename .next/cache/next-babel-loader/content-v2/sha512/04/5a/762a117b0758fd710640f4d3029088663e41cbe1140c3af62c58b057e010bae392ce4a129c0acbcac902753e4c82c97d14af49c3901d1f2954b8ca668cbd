{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yathartharora/Decentralised-Drive/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport HeadText from '../Components/Heading';\nimport { Grid, Button, Form, Input, Message } from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\n\nclass DDrive extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pass: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n        const key = '0x' + this.state.pass;\n        await drive.methods.registerTodrive(key).send({\n          from: accounts[0],\n          gas: '1000000'\n        });\n      } catch (error) {}\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  generate(event) {\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      this.setState({\n        ipfsHash: res[0].hash\n      });\n      console.log('ipfsHash: ', this.state.ipfsHash);\n    });\n    this.setState({\n      active: false\n    });\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    console.log('Capture File...');\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer ', this.state.buffer);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeadText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          floated: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: this.state.pass,\n                onChange: event => this.setState({\n                  pass: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              loading: this.state.loading,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          widescreen: 6,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n              children: \"Upload To Drive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"File Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  value: this.state.name,\n                  onChange: event => this.setState({\n                    name: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"file\",\n                  onChange: this.captureFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DDrive;","map":{"version":3,"sources":["/Users/yathartharora/Decentralised-Drive/pages/index.js"],"names":["React","Component","Layout","HeadText","Grid","Button","Form","Input","Message","drive","web3","DDrive","pass","loading","event","preventDefault","setState","accounts","eth","getAccounts","console","log","key","state","methods","registerTodrive","send","from","gas","error","generate","ipfs","files","add","buffer","err","res","ipfsHash","hash","active","captureFile","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","render","onSubmit","value","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../Components/Layout'\nimport HeadText from '../Components/Heading';\nimport {Grid, Button, Form, Input, Message} from 'semantic-ui-react';\nimport drive from '../Ethereum/drive';\nimport web3 from '../Ethereum/web3';\n\nclass DDrive extends Component{\n\n    state = {\n        pass: '',\n        loading: false,\n    }\n\n    onSubmit = async(event) => {\n        event.preventDefault();\n        this.setState({loading:true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts[0]);\n            const key = '0x' + this.state.pass;\n            await drive.methods.registerTodrive(key).send({\n                from: accounts[0],\n                gas: '1000000'\n            })\n        } catch (error) {\n            \n        }\n        this.setState({loading: false});\n    }\n    \n\n    generate(event) {\n        event.preventDefault();\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: false});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    \n    render(){\n\n        return(\n            <Layout>\n                <HeadText />\n                <br></br>\n                <Grid columns={2}>\n                    <Grid.Column width={6} floated=\"left\">\n\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Field>\n                            <label>Password</label>\n                            <Input\n                             value = {this.state.pass}\n                             onChange = {event => this.setState({pass: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Button primary loading={this.state.loading}>Register</Button>\n                    </Form>\n                    \n                    </Grid.Column>\n\n                    <Grid.Column widescreen={6}>\n                        <Message>\n                            <Message.Header>Upload To Drive</Message.Header>\n                            <Form>\n                                <Form.Field>\n                                    <label>File Name</label>\n                                    <Input\n                                     value = {this.state.name}\n                                     onChange = {event => this.setState({name: event.target.value})}\n                                    />\n\n                                    <label>File</label>\n                                    <Input\n                                     type = 'file'\n                                     onChange = {this.captureFile}\n                                    />\n\n                                </Form.Field>\n                            </Form>\n                        </Message>\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        )\n    }\n}\n\nexport default DDrive;"]},"metadata":{},"sourceType":"module"}